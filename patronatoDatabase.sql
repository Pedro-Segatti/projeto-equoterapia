CREATE DATABASE PATRONATO;
USE PATRONATO;

CREATE TABLE PAIS (
	PAI_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	PAI_ISO VARCHAR(4) NOT NULL, 
	PAI_NOME VARCHAR(100) NOT NULL
);


CREATE TABLE ESTADO (
	EST_UF VARCHAR(3) NOT NULL PRIMARY KEY, 
	EST_NOME VARCHAR(100) NOT NULL,
    EST_ID_PAIS INTEGER NOT NULL,
	CONSTRAINT FK_EST_PAIS FOREIGN KEY(EST_ID_PAIS) REFERENCES PAIS(PAI_ID)
);


CREATE TABLE CIDADE (
	CID_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, 
	CID_NOME VARCHAR(100) NOT NULL, 
	CID_ID_EST VARCHAR(3) NOT NULL,
	CONSTRAINT FK_CID_ESTADO FOREIGN KEY(CID_ID_EST) REFERENCES ESTADO(EST_UF)
);


CREATE TABLE BAIRRO (
	BAR_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	BAR_NOME VARCHAR(100) NOT NULL,
    BAR_ID_CID INTEGER NOT NULL,
	CONSTRAINT FK_BAR_CIDADE FOREIGN KEY(BAR_ID_CID) REFERENCES CIDADE(CID_ID)
);

CREATE TABLE LOGRADOURO (
	LOG_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, 
	LOG_DESCRICAO VARCHAR(100) NOT NULL, 
	LOG_CEP VARCHAR (8) NOT NULL, 
    LOG_ID_BAI INTEGER NOT NULL,
    CONSTRAINT FK_LOG_BAR FOREIGN KEY(LOG_ID_BAI) REFERENCES BAIRRO(BAR_ID)
);

CREATE TABLE PESSOA (
	PES_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, 
	PES_NOME VARCHAR(60) NOT NULL, 
	PES_CPF VARCHAR(11) NOT NULL UNIQUE, 
	PES_SEXO VARCHAR(1) NOT NULL, 
	PES_DATA_NASC DATE NOT NULL, 
	PES_END_NUM INTEGER NOT NULL, 
	PES_END_COMPL VARCHAR(100),
	PES_NACIONALIDADE VARCHAR(50) NOT NULL,
    PES_ID_LOG INTEGER NOT NULL,
	CONSTRAINT FK_PES_LOGRADOURO FOREIGN KEY(PES_ID_LOG) REFERENCES LOGRADOURO(LOG_ID)
);


CREATE TABLE TELEFONE (
	TEL_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, 
	TEL_NUMERO VARCHAR(14) NOT NULL,
    TEL_ID_PESSOA INTEGER NOT NULL,
	CONSTRAINT FK_TEL_PESSOA FOREIGN KEY(TEL_ID_PESSOA) REFERENCES PESSOA(PES_ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE RESPONSAVEL (
	RESP_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, 
	RESP_PROFISSAO VARCHAR(100) NOT NULL,
    RESP_ID_PESSOA INTEGER NOT NULL,
	CONSTRAINT FK_RESP_PESSOA FOREIGN KEY(RESP_ID_PESSOA) REFERENCES PESSOA(PES_ID)
);

CREATE TABLE CARGO (
	CAR_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	CAR_DESCRICAO VARCHAR(100) NOT NULL
);

CREATE TABLE FUNCIONARIO (
	FUNC_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, 
	FUNC_DATA_ADMISSAO DATE NOT NULL,
	FUNC_DATA_DESLIGAMENTO DATE,
	FUNC_PIS VARCHAR(15), 
	FUNC_CNH VARCHAR(11),
    FUNC_ID_PESSOA INTEGER NOT NULL,
	CONSTRAINT FK_FUNC_PESSOA FOREIGN KEY(FUNC_ID_PESSOA) REFERENCES PESSOA(PES_ID)
);


CREATE TABLE FUNCIONARIO_CARGO (
	FXC_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, 
    FXC_ID_FUNC INTEGER NOT NULL,
    FXC_ID_CARGO INTEGER NOT NULL,
	CONSTRAINT FK_FUNC_CAR_FUNC FOREIGN KEY(FXC_ID_FUNC) REFERENCES FUNCIONARIO(FUNC_ID),
	CONSTRAINT FK_FUNC_CAR_CAR FOREIGN KEY(FXC_ID_CARGO) REFERENCES CARGO(CAR_ID)
);


CREATE TABLE PRATICANTE (
	PRAT_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    PRAT_ID_PESSOA INTEGER NOT NULL,
    CONSTRAINT FK_PRAT_PESSOA FOREIGN KEY(PRAT_ID_PESSOA) REFERENCES PESSOA(PES_ID)
);

CREATE TABLE PRATICANTE_RESPONSAVEL(
	PXR_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    PXR_ID_PRAT INTEGER NOT NULL,
    PXR_ID_RESP INTEGER NOT NULL,
    CONSTRAINT FK_PXR_PRAT FOREIGN KEY(PXR_ID_PRAT) REFERENCES PRATICANTE(PRAT_ID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT FK_PXR_RESP FOREIGN KEY(PXR_ID_RESP) REFERENCES RESPONSAVEL(RESP_ID)
);


CREATE TABLE AVAL_SOCIOECON (
	ASE_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, 
	ASE_OBS_CONT_FAM BLOB NOT NULL, 
	ASE_OBS_MEDICAMENTOS BLOB NOT NULL,
    ASE_ID_PRATICANTE INTEGER NOT NULL,
	CONSTRAINT FK_ASE_PRATI FOREIGN KEY(ASE_ID_PRATICANTE) REFERENCES PRATICANTE(PRAT_ID) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE DOCUMENTOS (
	DOC_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	DOC_DOCUMENTO BLOB NOT NULL,
    DOC_ID_PRATICANTE INTEGER NOT NULL,
	CONSTRAINT FK_COD_PRATI FOREIGN KEY(DOC_ID_PRATICANTE) REFERENCES PRATICANTE(PRAT_ID) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE AVAL_FISIOTER (
	AFT_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    AFT_ID_PRATICANTE INTEGER NOT NULL,
    AFT_ID_FUNCIONARIO INTEGER NOT NULL,    
	AFT_QUEIXA BLOB,
	AFT_DIAG_CLIN BLOB,
	AFT_DIAG_FISIO BLOB,
	AFT_ANAMNESE BLOB,
	AFT_ROT_TERAPIA BLOB,
	AFT_EXAME_FIS BLOB,
	AFT_DES_MOTO_NEURO BLOB,
	AFT_REF_PRIM_TEND BLOB,
	AFT_ATV_REFLE_RCERV BOOLEAN,
	AFT_ATV_REFLE_RCORP BOOLEAN,
	AFT_ATV_REFLE_RAPOA BOOLEAN,
	AFT_ATV_REFLE_RAPOL BOOLEAN,
	AFT_ATV_REFLE_RAPOP BOOLEAN,
	AFT_ATV_REFLE_OBS BLOB,
	AFT_SENSE_TATIL BOOLEAN,
	AFT_SENSE_DOLO BOOLEAN,
	AFT_SENSE_TERM BOOLEAN,
	AFT_SENSE_OBS BLOB,
	AFT_AMOTO_COR_HIPE BOOLEAN,
	AFT_AMOTO_ATE_HIPO BOOLEAN,
	AFT_AMOTO_CONT_ESP BOOLEAN,
	AFT_AMOTO_DEF_ATX BOOLEAN,
	AFT_AMOTO_CLONUS BOOLEAN,
	AFT_AMOTO_OBS BLOB,
	AFT_MAR_LOC_ATU BLOB,
	AFT_AVAL_POST BLOB,
	AFT_SOLO_CAVALO BLOB,
	AFT_MTR_ALC_OBJ VARCHAR(1),
	AFT_MTR_ALIMEN VARCHAR(1),
	AFT_MTR_PREEN_OBJ VARCHAR(1),
	AFT_MTR_HIGIENI VARCHAR(1),
	AFT_MTR_USO_BIMANUAL VARCHAR(1),
	AFT_MTR_NEG_MEMBRO VARCHAR(1),
	AFT_MTR_VESTE_SOZ VARCHAR(1),
	AFT_MTR_CONT_ESFINCT VARCHAR(1),
	AFT_FMUSC_MMSS VARCHAR(1),
	AFT_FMUSC_MMII VARCHAR(1),
	AFT_FMUSC_TRONCO VARCHAR(1),
	AFT_FMUSC_OBS VARCHAR(1),
	AFT_CMOTO_EST_OBS BLOB,
	AFT_CMOTO_DIN_OBS BLOB,
	AFT_PREEN_PALMAR BOOLEAN,
	AFT_PREEN_PINCA BOOLEAN,
	AFT_MOV_PASSIVA VARCHAR(20),
	AFT_MOV_RESPIRA VARCHAR(20),
	AFT_MOV_DEGLUTI VARCHAR(20),
	AFT_MOV_MASTIG VARCHAR(20),
	AFT_MOV_CONT_ESFINCT VARCHAR(20),
	AFT_QUAD_COGNITIVO BLOB,
	AFT_SIST_RESP BLOB,
	AFT_SIST_CIRC BLOB,
	AFT_EXAM_COMP BLOB,
	AFT_MEDICACOES BLOB,
	AFT_PARECER_FISIO BLOB,
	AFT_DATA DATE,
	CONSTRAINT FK_AFT_PRATICANTE FOREIGN KEY(AFT_ID_PRATICANTE) REFERENCES PRATICANTE(PRAT_ID) ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT FK_AFT_FUNCIONARIO FOREIGN KEY(AFT_ID_FUNCIONARIO) REFERENCES FUNCIONARIO(FUNC_ID) ON UPDATE CASCADE
);

CREATE TABLE FICHA_ANAMNESE (
	AMN_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	AMN_ID_PRATICANTE INTEGER NOT NULL,
    AMN_ID_FUNCIONARIO INTEGER NOT NULL,    
	AMN_PAIS_CASADOS BOOLEAN,
	AMN_REAC_SEPARACAO BLOB,
	AMN_MORADIA BLOB,
	AMN_POSSUI_IRMAO BOOLEAN,
	AMN_INFOS_IRMAO BLOB,
	AMN_ADOTADO BOOLEAN,
	AMN_CIENCIA_ADOCAO BOOLEAN,
	AMN_REAC_ADOCAO BLOB,
	AMN_HIP_DIAG BLOB,
	AMN_MOTIVO_EQUO BLOB,
	AMN_EXPEC_TRAT BLOB,
	AMN_TP_GEST VARCHAR(1),
	AMN_SAUDE_MAE_GESTACAO BLOB,
	AMN_ACONT_GESTACAO BLOB,
	AMN_TP_PARTO VARCHAR(1),
	AMN_PARTO_OBS BLOB,
	AMN_AMARELAO BOOLEAN,
	AMN_FEBRE BOOLEAN,
	AMN_PERM_INCUBADORA BOOLEAN,
	AMN_TEMPO_INCUBADORA INTEGER,
	AMN_REAC_PAIS_FAM BLOB,
	AMN_TP_AMAMENTACAO VARCHAR(1),
	AMN_DIF_ESFINCTER BOOLEAN,
	AMN_ENURESE_NOTU BOOLEAN,
	AMN_PERT_NOT BOOLEAN,
	AMN_PERT_OBS BLOB,
	AMN_DORME_SOZ BOOLEAN,
	AMN_DORME_PAIS BOOLEAN, 
	AMN_DIV_QUARTO BOOLEAN,
	AMN_DIV_QUARTO_OBS BLOB,
	AMN_HABIT_ESPEC BOOLEAN,
	AMN_ENGATINHA BOOLEAN,
	AMN_SENTA BOOLEAN,
	AMN_ANDA BOOLEAN,
	AMN_CORRE BOOLEAN,
	AMN_TONICIDADE BLOB,
	AMN_EQUILIBRIO BLOB,
	AMN_LATERALIZACAO BLOB,
	AMN_NOCAO_CORP BLOB,
	AMN_EST_ESP_CORP BLOB,
	AMN_PRAXIA_GLOBAL BLOB,
	AMN_PRAXIA_FINA BLOB,
	AMN_DESV_NORMAL BOOLEAN,
	AMN_DESV_FAT_REL BLOB,
	AMN_LV_FALA_COMP BOOLEAN,
	AMN_LV_APENAS_PAL BOOLEAN,
	AMN_LV_VOCALIZACAO BOOLEAN,
	AMN_LG_APONTA_OBJ BOOLEAN,
	AMN_LG_MOST_OQQ BOOLEAN,
	AMN_LG_EXP_FAC BOOLEAN,
	AMN_BANHO_SOZINHO BOOLEAN,
	AMN_ESCOVA_SOZINHO BOOLEAN,
	AMN_BAN_SOZINHO BOOLEAN,
	AMN_AUX_VESTIR BOOLEAN,
	AMN_CONT_ESFIN BOOLEAN,
	AMN_COME_SOZ BOOLEAN,
	AMN_IDADE_RET_FRAL INTEGER,
	CONSTRAINT FK_AMN_PRATICANTE FOREIGN KEY(AMN_ID_PRATICANTE) REFERENCES PRATICANTE(PRAT_ID) ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT FK_AMN_FUNCIONARIO FOREIGN KEY(AMN_ID_FUNCIONARIO) REFERENCES FUNCIONARIO(FUNC_ID) ON UPDATE CASCADE
);


CREATE TABLE PICADEIRO (
	PIC_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	PIC_DESCRICAO VARCHAR(50) NOT NULL
);


CREATE TABLE ANIMAL (
	ANI_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, 
	ANI_IDADE INTEGER, 
    ANI_NOME VARCHAR(60) NOT NULL, 
	ANI_PORTE VARCHAR(1) NOT NULL
);


CREATE TABLE ATIVIDADE (
	ATV_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, 
	ATV_DESCRICAO VARCHAR(100) NOT NULL, 
	ATV_DURACAO VARCHAR(15) NOT NULL
);


CREATE TABLE MATERIAL (
	MAT_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, 
	MAT_DESCRICAO VARCHAR(60) NOT NULL
);

CREATE TABLE FICHA_EVOLUCAO(
	EVOL_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    EVOL_ALTERACOES BLOB,
    EVOL_COMPORT_EQUIPE BOOLEAN,
    EVOL_COMPORT_ANIMAL BOOLEAN,
    EVOL_HUMOR_BOOLEAN BOOLEAN,
    EVOL_ATENCAO BOOLEAN,
    EVOL_AUTONOMIA BOOLEAN,
    EVOL_POSTURA BLOB,
    EVOL_PROGRESSO BLOB
);

CREATE TABLE FICHA_EVOL_ANIMAL(
	FXA_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FXA_ID_ANIMAL INTEGER NOT NULL,
    FXA_ID_FICHA INTEGER NOT NULL,
	CONSTRAINT FK_FXA_ANIMAL FOREIGN KEY(FXA_ID_ANIMAL) REFERENCES ANIMAL(ANI_ID),
    CONSTRAINT FK_FXA_FICHA FOREIGN KEY(FXA_ID_FICHA) REFERENCES FICHA_EVOLUCAO(EVOL_ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE FICHA_EVOL_ATIVIDADE_MATERIAL(
	FXAT_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FXAT_ID_ATIVIDADE INTEGER NOT NULL,
    FXAT_ID_MATERIAL INTEGER NOT NULL,
    FXAT_ID_FICHA INTEGER NOT NULL,
	CONSTRAINT FK_FXAT_ATIVIDADE FOREIGN KEY(FXAT_ID_ATIVIDADE) REFERENCES ATIVIDADE(ATV_ID),
    CONSTRAINT FK_FXAT_MATERIAL FOREIGN KEY(FXAT_ID_MATERIAL) REFERENCES MATERIAL(MAT_ID),
    CONSTRAINT FK_FXAT_FICHA FOREIGN KEY(FXAT_ID_FICHA) REFERENCES FICHA_EVOLUCAO(EVOL_ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE FICHA_EVOL_PICADEIRO(
	FXP_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FXP_ID_PICADEIRO INTEGER NOT NULL,
    FXP_ID_FICHA INTEGER NOT NULL,
	CONSTRAINT FK_FXP_PICADEIRO FOREIGN KEY(FXP_ID_PICADEIRO) REFERENCES PICADEIRO(PIC_ID),
    CONSTRAINT FK_FXP_FICHA FOREIGN KEY(FXP_ID_FICHA) REFERENCES FICHA_EVOLUCAO(EVOL_ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE FICHA_EVOL_PRATICANTE(
	FXPR_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FXPR_ID_PRATICANTE INTEGER NOT NULL,
    FXPR_ID_FICHA INTEGER NOT NULL,
	CONSTRAINT FK_FXPR_PRATICANTE FOREIGN KEY(FXPR_ID_PRATICANTE) REFERENCES PRATICANTE(PRAT_ID),
    CONSTRAINT FK_FXPR_FICHA FOREIGN KEY(FXPR_ID_FICHA) REFERENCES FICHA_EVOLUCAO(EVOL_ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE FICHA_EVOL_FUNCIONARIO(
	FXF_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FXF_ID_FUNCIONARIO INTEGER NOT NULL,
    FXF_ID_FICHA INTEGER NOT NULL,
	CONSTRAINT FK_FXF_FUNCIONARIO FOREIGN KEY(FXF_ID_FUNCIONARIO) REFERENCES FUNCIONARIO(FUNC_ID),
    CONSTRAINT FK_FXF_FICHA FOREIGN KEY(FXF_ID_FICHA) REFERENCES FICHA_EVOLUCAO(EVOL_ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE AGENDAMENTO(
	AGD_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    AGD_DATA TIMESTAMP NOT NULL,
    AGD_DESCRICAO VARCHAR(100) NOT NULL
);

CREATE TABLE AGENDAMENTO_ANIMAL(
	AXA_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    AXA_ID_AGENDAMENTO INTEGER NOT NULL,
    AXA_ID_ANIMAL INTEGER NOT NULL,
    CONSTRAINT FK_AXA_AGENDAMENTO FOREIGN KEY(AXA_ID_AGENDAMENTO) REFERENCES AGENDAMENTO(AGD_ID) ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT FK_AXA_ANIMAL FOREIGN KEY(AXA_ID_ANIMAL) REFERENCES ANIMAL(ANI_ID)
);

CREATE TABLE AGENDAMENTO_PRATICANTE(
	AXP_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    AXP_ID_AGENDAMENTO INTEGER NOT NULL,
    AXP_ID_PRATICANTE INTEGER NOT NULL,
	CONSTRAINT FK_AXP_AGENDAMENTO FOREIGN KEY(AXP_ID_AGENDAMENTO) REFERENCES AGENDAMENTO(AGD_ID) ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT FK_AXP_PRATICANTE FOREIGN KEY(AXP_ID_PRATICANTE) REFERENCES PRATICANTE(PRAT_ID)
);

CREATE TABLE AGENDAMENTO_FUNCIONARIO(
	AXF_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    AXF_ID_AGENDAMENTO INTEGER NOT NULL,
    AXF_ID_FUNCIONARIO INTEGER NOT NULL,
    CONSTRAINT FK_AXF_AGENDAMENTO FOREIGN KEY(AXF_ID_AGENDAMENTO) REFERENCES AGENDAMENTO(AGD_ID) ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT FK_AXF_FUNCIONARIO FOREIGN KEY(AXF_ID_FUNCIONARIO) REFERENCES FUNCIONARIO(FUNC_ID)
);

CREATE TABLE AGENDAMENTO_MATERIAL(
	AXM_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    AXM_ID_AGENDAMENTO INTEGER NOT NULL,
    AXM_ID_MATERIAL INTEGER NOT NULL,
    CONSTRAINT FK_AXM_AGENDAMENTO FOREIGN KEY(AXM_ID_AGENDAMENTO) REFERENCES AGENDAMENTO(AGD_ID) ON UPDATE CASCADE ON DELETE CASCADE,
	CONSTRAINT FK_AXM_MATERIAL FOREIGN KEY(AXM_ID_MATERIAL) REFERENCES MATERIAL(MAT_ID)
);

#DROP DATABASE PATRONATO;


